(def name (str "hi, " "i am" " udit!"))
(print (str name " nice to meet you"))

(print "this is my programming language, axolotl")

(defun get-given-count [(argument-for-no-reason: int)] {
  (+ argument-for-no-reason 1)
})

(def text1 "If I have ")
(def text2 " apples to everyone, i'll be left with ")

(defun arbitrary-function [(initial: int)] {
  (print "expressions are written in braces")
  (print "and the last value is returned!")
  (print (str text1 (+ initial 2) " apples and I give " (get-given-count 2) text2 (/ (+ initial 2) (get-given-count 4)) " apples!"))
  420
})

// multiple arguments syntax
(defun test-fn [things: int] {
  (print things) // [1, 2, 3, ...]
})

// multiple arguments but with given arguments
(defun yet-another-test-fn [(one-thing: int) (another-thing: string) &(more-things: string)] {
    (print "hello")
})

(def initial-val 37)

(print (arbitrary-function initial-val))

